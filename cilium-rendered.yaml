---
# Source: cilium/templates/cilium-secrets-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
automountServiceAccountToken: false
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9iQVgvV2dtZ05LbHowc0g2M2VZU0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTVRBd01URXhNemd3TmxvWERUSTRNRGt6TURFeApNemd3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyWVhMSFFmOXRuaTlWNS92eDVUOENEVmJHN3NzcEg5ZU1oa0pCUEVvMWJGVVNSQ0gKRUZnMFNIODZaR0haWGcyckZrTXQxMFNWam41aUJIYXNEYzJFN09wbUpxRXZ2cXJOYmZDOE81L3R4STRveVE3Qwowekl0dSsyOUxPaVhYTnFVTm8zOENBdXRlcm9RNGdjaGdSM3BrR2g0UTVWOTFvQVZUM1c2Tmt1MW1FYTlvQUtRCllKK0FETGZtUVFHeHJSWDYyWnlrOFZjWkZHS3BldGZsMUFQbGtCRGplZURYOFR1TFZLc2dUUVlKUHJqSnZJTEkKdzlYRktuZHl5bTdsYlBMUHdYYThMZ2kxTjJ5VWkyeWV4RmdXMmZxU3JBNHBGZ0R0em41cmxoQnJVZVdYbDNqeQpMQzJmT2VOZFhRaTMrQ3lzRTlTUGtHMDRTMGFhNVdtMXNkTzlVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSnZHa3BDb1VHcThKYlY2dFZXM0RxOTlnNyt0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQS9lVEFrNER5WGRIVm5DcEpyNnNjckJvK3I3ZzNNd082VDB0Sm9ibTVuMFVBMkRlclBUd3F1CnE2alV4TlBwZ0FqS2Rla2FaTlkrVE15MWpHNTR2TzdGdGZhM29DY0s5Yk52ZnlBM3JwZWJWU2Z1UlJBZFZtZloKcGk2SExnODdja1hRSjJUTXNzUlFXUDg1TC95eDBtekhpSHVGcjYrQW12dHV4YmxxS0ViLzUvaXY4UWhrNVlHNwoxWEc5cFFhaWk3R2lGQTVtNDFHTEw3Q0FRbTlrZkFyQlJJVHdnN1N6emdHSHRLWjFIcW9JNUZtNHd2aG5SWFllCkFIeDJvZm5LTmVKZS9YRDhSTFF4RGJhR1JTRWk4bHp5WUdobzJKL09HWnhEZERrVDR6VW5ydGthR09mRHl5SlcKWTk3Q1A1T3YrSFhBakhKRzNiWXVoT0p0RkFKYlFmb2QKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcllYTEhRZjl0bmk5VjUvdng1VDhDRFZiRzdzc3BIOWVNaGtKQlBFbzFiRlVTUkNICkVGZzBTSDg2WkdIWlhnMnJGa010MTBTVmpuNWlCSGFzRGMyRTdPcG1KcUV2dnFyTmJmQzhPNS90eEk0b3lRN0MKMHpJdHUrMjlMT2lYWE5xVU5vMzhDQXV0ZXJvUTRnY2hnUjNwa0doNFE1Vjkxb0FWVDNXNk5rdTFtRWE5b0FLUQpZSitBRExmbVFRR3hyUlg2Mlp5azhWY1pGR0twZXRmbDFBUGxrQkRqZWVEWDhUdUxWS3NnVFFZSlByakp2SUxJCnc5WEZLbmR5eW03bGJQTFB3WGE4TGdpMU4yeVVpMnlleEZnVzJmcVNyQTRwRmdEdHpuNXJsaEJyVWVXWGwzankKTEMyZk9lTmRYUWkzK0N5c0U5U1BrRzA0UzBhYTVXbTFzZE85VXdJREFRQUJBb0lCQUFJaHIvcitpQkNQczlzcgo2OTdJYTRmakkrZ3A4ZmJONjc1Z3pleWhpOFVWOTZjRjFnWlh1NTFDWC8zbVo5RWFMWFFTb1F5Ky81VEI1RU9qCjZtc0V0QlliaWl6OXZGYWdmUEZuM3J1RDZ6ZFExM1pycnNrbDBIQzVvWS9LS3M3N2ptZ2VBNjdLZWU3ZWhQeTMKaXJWU3NtTjE5amcrNC9MR1FlRlV5cTlQV2NnV2Izbm1FTkFLMnBTbGJBemtXSlVaazl2WHQ4TmVralpCQzNsWgpIbVFnZHQzK2dORlB6bW8xblpvZ1FpcjlpeDBZai9NZFMxMUEybW1SNFN0OGN6L0JMdVJPcTJ2dE5hL0NYbll4CndzQ3VJc09JRHJ6R1RuWnY0eWtFcDkzZjVsRmlMWVFZS3Y0MGVmZjFNZDZTd2RNcHFNNUF2NXRnTWJyLzJoWTcKejNSeFNDMENnWUVBeGk0Mi9JTnhhdHNCSDRBNmphc0FmZFdlYXhrRWF2MlZJOEkxcGpTOExrckdOWVVhMis0VwovR05ENjJlY1dEQ3NYQ3FxUVNxYWpOOFIwV1N0UHNRTlFqOHdwU3dEUXR6VUtlZjRHTTBHMEZPdGFibVpxYlcwCkJSTG5yY3NUVWJXNXB2TmtPUERmOHZTVG80V1ZGb0lrTk9tNGlVbDhvUzVDc1YrZzFGNnI2RVVDZ1lFQTRDWHIKZzJLaWorblRjaTdWV0RLTVlkU2libUFoMS9XbW5EM0ZnNTJOOG1mK1E2Qm1aMDNoMGFTUVB5YklRa0xlYTFzVApMb3c5QjVscUtqM1ZmdVJieTl3S0U3cTBwSW1BeXZIaGtEU3RzTDhNM1VaWDhKZUtoWTArajJGYkhlR0VLc3A1CjBKTmxEc2FpTlBtcHNweTl4Wjd6a2s5RlJzNWcvR3BiYndVYkpMY0NnWUVBc25odUJrc3MrV2pPZ3hyTUlFWnUKQStRN2JRRXpqRkpmVzd1SzZ1bTB5ZytHbmk0SE9TWVp4eUp4eU80ZXl3RFNSNUlZanVVYUYyRFB2LzFsVXcvbApUTkp4TVY0SWRjOCt0WnAwUDRscjZISml5Y0plRW9wUzJ2cmlidzFoa1lVUThydGZkelBjeWdQZGJUWmdROHZoClpWRlJZVGt2cGt0dHZpUjdScVVYTk8wQ2dZRUF5VExnaTJmZk9jVU95c0NsT216dE8rZU5BZnlDaElKNVVtZlUKUW9jTFlscmNqa0dOaWc4THM0MisrU0RMdzBhWXRjN2prZlhKMW1kc040eVhkalp1KzdlQXlDTGdnWXozc2JPYQo0RUdZNHowcXcvaWZlVlBkd0hGL2hWNURWcmdXVmY2M2gzUzIwcU9UK0c5ZVZ2aUJFOEhSS3pUQ240TWk1WkJtCmtHb0o2bE1DZ1lBZy9zeEtRenhuSW9WMWJ2ME8raStVNzBNQTlOS2Fjdkl3WVJ3RGNPVHZscTZHNVUwaHdpelQKeCs5bXRZV0huR3ZPSDdrc0hhNlFReDRjSnNKdzF2RzNmU0doZnp3V01SUTNkeDlBQmlpZDN0MVV6ai84cnl3OAo1SkdsM292VWY5RWxYUWV3dnF6aTJpU3lUZDc5VG1kNjRSVytrdGhLWUo2bTArb3FvKzVveXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9iQVgvV2dtZ05LbHowc0g2M2VZU0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTVRBd01URXhNemd3TmxvWERUSTRNRGt6TURFeApNemd3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyWVhMSFFmOXRuaTlWNS92eDVUOENEVmJHN3NzcEg5ZU1oa0pCUEVvMWJGVVNSQ0gKRUZnMFNIODZaR0haWGcyckZrTXQxMFNWam41aUJIYXNEYzJFN09wbUpxRXZ2cXJOYmZDOE81L3R4STRveVE3Qwowekl0dSsyOUxPaVhYTnFVTm8zOENBdXRlcm9RNGdjaGdSM3BrR2g0UTVWOTFvQVZUM1c2Tmt1MW1FYTlvQUtRCllKK0FETGZtUVFHeHJSWDYyWnlrOFZjWkZHS3BldGZsMUFQbGtCRGplZURYOFR1TFZLc2dUUVlKUHJqSnZJTEkKdzlYRktuZHl5bTdsYlBMUHdYYThMZ2kxTjJ5VWkyeWV4RmdXMmZxU3JBNHBGZ0R0em41cmxoQnJVZVdYbDNqeQpMQzJmT2VOZFhRaTMrQ3lzRTlTUGtHMDRTMGFhNVdtMXNkTzlVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSnZHa3BDb1VHcThKYlY2dFZXM0RxOTlnNyt0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQS9lVEFrNER5WGRIVm5DcEpyNnNjckJvK3I3ZzNNd082VDB0Sm9ibTVuMFVBMkRlclBUd3F1CnE2alV4TlBwZ0FqS2Rla2FaTlkrVE15MWpHNTR2TzdGdGZhM29DY0s5Yk52ZnlBM3JwZWJWU2Z1UlJBZFZtZloKcGk2SExnODdja1hRSjJUTXNzUlFXUDg1TC95eDBtekhpSHVGcjYrQW12dHV4YmxxS0ViLzUvaXY4UWhrNVlHNwoxWEc5cFFhaWk3R2lGQTVtNDFHTEw3Q0FRbTlrZkFyQlJJVHdnN1N6emdHSHRLWjFIcW9JNUZtNHd2aG5SWFllCkFIeDJvZm5LTmVKZS9YRDhSTFF4RGJhR1JTRWk4bHp5WUdobzJKL09HWnhEZERrVDR6VW5ydGthR09mRHl5SlcKWTk3Q1A1T3YrSFhBakhKRzNiWXVoT0p0RkFKYlFmb2QKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBLOHNQV0xtTGFqTVExZnFKcmZkQlV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTVRBd01URXhNemd3TjFvWERUSTJNVEF3TVRFeApNemd3TjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTR0dXQ0VEpzaGNKZVVDa0JqS2huREpPMzB1THMKVUdncVhGMTZUUjBzSHg3OFlRdTA0emQ2Wi9uMFdqV0pkZ3ZmU3NCZlE2SzBybXVDWDZ4NzFHUEp4UWZoeGhTbwpRRmhIQlpDb1Q0b1Q1UFljRnR0eW9YRUxmRXM5SWdaK2hWTHdlWVVuZUlxOThrNkVYaU91NW4yYTJzdkRZL2EvCkZjZTZNUUh4ME11ZWVwUWlCK2xDdG02ckFiTXpFNVV4RWFIeG5CZ2t2UmZwYVlIODhYd2pTUXJoMmEyOHNnc2oKWGdqdThZQ1hob0lNbC9KVjRZcytqcEE2S1pyZkphaUR2eW1GS1A3blZhNFVwNkJ0K3g0TG5JODZtRzBsWGIwWgppNXBzRlRjd2JtU1FoTVhsbysrRCtiQlNxNVVyZGxTUkR3UHBpYjc1aTdmL3AxUmJEZGR5dElQbEZRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU2J4cEtRcUZCcXZDVzFlclZWdHc2dgpmWU8vclRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQUZISm96d3BSS3pGcWlPelg4Z2tCdExrUm9DZkdLcjJXRFM3c1dsSGRPNm5rMHYKVmlEbnRyR2lIRFNtVmE0U1JyNEZ2K2pqZ09QRWtEMHRtN0pXVkZnSzEzYTVlMzVJc1BmOWkybFBTSndWNVpERgozZ2RmYW1JUlFwVVBtckNPbTN6NXZqNW4xeFRXcG1iaEtOMHVNKzBsQllidlFsYW5HdElxQnNFNU10aFNObTdDCm9nanEzWXdTdjdVN2tJNHYvby9XendEQ1ptdXZpcHd1SG5KNWhQRGVZSWNZdFl6eURaNXV0WS9wdGt2bXdZb1gKcnBuUTI5NmZmVTl0c3ROSDVYdUdjRUFpZ01oSmluZjBqM0Z6TEVhVDBLQ2ExSXF4RkpmbDgvRnhuZDZVUnBEcQpKVW1RaHNMOEpwUk1CekEwdFNINFFDb0dFK2NnaTRXbmJkaHhLSjA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNHR1dDRUSnNoY0plVUNrQmpLaG5ESk8zMHVMc1VHZ3FYRjE2VFIwc0h4NzhZUXUwCjR6ZDZaL24wV2pXSmRndmZTc0JmUTZLMHJtdUNYNng3MUdQSnhRZmh4aFNvUUZoSEJaQ29UNG9UNVBZY0Z0dHkKb1hFTGZFczlJZ1oraFZMd2VZVW5lSXE5OGs2RVhpT3U1bjJhMnN2RFkvYS9GY2U2TVFIeDBNdWVlcFFpQitsQwp0bTZyQWJNekU1VXhFYUh4bkJna3ZSZnBhWUg4OFh3alNRcmgyYTI4c2dzalhnanU4WUNYaG9JTWwvSlY0WXMrCmpwQTZLWnJmSmFpRHZ5bUZLUDduVmE0VXA2QnQreDRMbkk4Nm1HMGxYYjBaaTVwc0ZUY3dibVNRaE1YbG8rK0QKK2JCU3E1VXJkbFNSRHdQcGliNzVpN2YvcDFSYkRkZHl0SVBsRlFJREFRQUJBb0lCQUFWOHhWbTFaOGtiZ0w4RgpJdWUxV2hyRWh2V0hyaW9xdnQyUm1FZjl2T2U2enVXRkREalR5bmJ4NVo1NS9ZdDRzWXZFRi9uUm1YZS9tMzEzCmRWNVhsSldhd1hRU1kxaDlHaWl4RFZVeE5KWjgrb1IyQmZHUVE3UWJ1TXlXSmlEUTl3YWxlU1V5Qy9Lc3dnaHAKNmd6aXZHaHU5ZGk0NnZuYXBTOFN5amZmK1FNamZ2dUlTM0JpN0hXSktSZGE1TlpYcS85SmQ2Tmk5TmlpelNKUwpSMlcvU25IRDdSblhpMlBPTS8wMHBNLytsa1hYbWpPemQyaVZtRVlTMDY4OFZYZStPaDROaDR4US9rQWRrZlNMCi9RSDJja2IrTGhxMGFoNmY0OWU3RFRoeGVKTUlVNHBJdnlwdUp5MW5ZTEkydWFmOWMybTZEZlZuMzVsaWxMd2oKYUE5dDlJRUNnWUVBNUtxT1FWQzE0M1FtSk5FbzFMUEpsMDlnWXVvN0lndit6UnVyMG9uaGV1emhnRVQwSHRKOQovU0R2Q1NINUJKZUtncTJ1MUdML2c5UlgwR1AvTG5SczhPTVdBREpOSVlySHdFZ08xYXpNVGswUk1mYzRaZ1lEClhhWjFoZWF4OTVSaUVqZndjMGxObzZwWE1XaE1ycDdPR1RSZVFBYkRZd0xFYW12Uyt4clpBcFVDZ1lFQS9mbkwKRlUvY3ZGWUZHaUJhQURMMzZNZWR6MVRpekFpVi96OW1xcHhwUjcra2FRalNnbFFqR2FMdE1ybThuOFdrMGZ1WQphUWdUM1M4c3V3TzFGc2lMbHdONVRFRkpyenJBTTVoWGx0WjBta1NWWW51aFJkTUZ1TWlrWFNNdUxIK3YxYjdmCjNaYnduV1MxMDEwTlJtZkxwbzliaHZCK1pyNmRGUGtKZTB6MU9JRUNnWUJoUlFQNldNRG1ublBUV1gzSzdTZWwKeThndWk0RFgvTTVJcGFxemhwOTUwT1lqMERFZ0kxNGduUy9SYkxnbThlZWpxd29ob25NYXV1c1g1RkdhaTBBRQpRRFVOcEZnWEdwZlovVTBDSzkxRXVaZkU3MnI0U3pxSFRkWFVQY3dhaXU0azNkTFUxNnZGSVNLeUM3SUMzZDdCCjdmcmh0WDdMMFZPSUNaSFg2eFhBK1FLQmdRQ0pZQ2txVVBWcjVmZUNoMGRIWGtwY1hrVU5GYlJMZXNWdnVHS1gKSEYyU0VxWWlya1AzZlAwemE3NXp0cVhCb2syaHl6NUlhYmNjNTl5QkYrTkcvSmtNeVRNK1BQNVhTeWNWZ1d5MwpTUzd2RnZQYXZsYWdoeUZNTHpOQXNidlRGQW9QU3R5YVpuK21Fd2lLMklWS3RQQWlHdDcrSVcydHM2TVI2aGJuCjI5dTBnUUtCZ1FERmZXeWwvdjVpRFFtSkJ6bzZmNmlkYmhFazlUYnJuNUpYbG1OOS8ya0pZb1RZUTJFNUw3dDUKSGI5Skx6NmpOR2wveEsyRzZnQmRwaUc4RGNPczBrQWlyOUdLSHBSS0lUVUQ0NUN5YmZzRzk3WFlYSXE3Vlg1aQpxZ1c1K3FDenJCQjdmMDZVdzJVZjNUekxWaHJkTW5ZWXRyOHVMRTllMEVSS2xWaWgxcUo4RGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9iQVgvV2dtZ05LbHowc0g2M2VZU0F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEkxTVRBd01URXhNemd3TmxvWERUSTRNRGt6TURFeApNemd3Tmxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyWVhMSFFmOXRuaTlWNS92eDVUOENEVmJHN3NzcEg5ZU1oa0pCUEVvMWJGVVNSQ0gKRUZnMFNIODZaR0haWGcyckZrTXQxMFNWam41aUJIYXNEYzJFN09wbUpxRXZ2cXJOYmZDOE81L3R4STRveVE3Qwowekl0dSsyOUxPaVhYTnFVTm8zOENBdXRlcm9RNGdjaGdSM3BrR2g0UTVWOTFvQVZUM1c2Tmt1MW1FYTlvQUtRCllKK0FETGZtUVFHeHJSWDYyWnlrOFZjWkZHS3BldGZsMUFQbGtCRGplZURYOFR1TFZLc2dUUVlKUHJqSnZJTEkKdzlYRktuZHl5bTdsYlBMUHdYYThMZ2kxTjJ5VWkyeWV4RmdXMmZxU3JBNHBGZ0R0em41cmxoQnJVZVdYbDNqeQpMQzJmT2VOZFhRaTMrQ3lzRTlTUGtHMDRTMGFhNVdtMXNkTzlVd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGSnZHa3BDb1VHcThKYlY2dFZXM0RxOTlnNyt0TUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQS9lVEFrNER5WGRIVm5DcEpyNnNjckJvK3I3ZzNNd082VDB0Sm9ibTVuMFVBMkRlclBUd3F1CnE2alV4TlBwZ0FqS2Rla2FaTlkrVE15MWpHNTR2TzdGdGZhM29DY0s5Yk52ZnlBM3JwZWJWU2Z1UlJBZFZtZloKcGk2SExnODdja1hRSjJUTXNzUlFXUDg1TC95eDBtekhpSHVGcjYrQW12dHV4YmxxS0ViLzUvaXY4UWhrNVlHNwoxWEc5cFFhaWk3R2lGQTVtNDFHTEw3Q0FRbTlrZkFyQlJJVHdnN1N6emdHSHRLWjFIcW9JNUZtNHd2aG5SWFllCkFIeDJvZm5LTmVKZS9YRDhSTFF4RGJhR1JTRWk4bHp5WUdobzJKL09HWnhEZERrVDR6VW5ydGthR09mRHl5SlcKWTk3Q1A1T3YrSFhBakhKRzNiWXVoT0p0RkFKYlFmb2QKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRVHhYT1hOYXlQelFDeVltbnlDbk50VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05NalV4TURBeE1URXpPREEzV2hjTk1qWXhNREF4TVRFegpPREEzV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBeGtpWWk5QjFxRHplVnVLQXhxNjQKMUFqSW1oem5iMm5UK0hJb0NsTDIzMENTSUJTdGVhem1PejdudGtKTmxxUXA5VFFCcXpGek5nTVdJNlhVb0pIUwpzZW5jejhlaG1HVWJFejRiaEVMNEhCekVRaHhNUXNNbG4xeFAzcnh5aFRWQlF2MlhPRGxHYUVJWjhNSG13dFY2ClIxaWRNS0pWQnJOeTRVTkM5M1lJYmZ1Qjh1d1FKSUtRQ1piSFhSN1NsTEJsaUlpOXd5RzNtL3ZITEs0WW9FYSsKQ0hSc2V5Q0Z5UGp5eDZaMjlyNklyS0pPREc0aUF4YStZRWdLNnFGaCtFdXdUZVpjTHlzaC81N2F4K2kxYmU5UQo0YmloRXUzRUZxZE52QmNXYlNORTg3ZndETlBKUXVmeFlIbUFpM09wd2gyekVtNWtPM2duaDQxZmcrMGxEWHVpClZ3SURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JTYnhwS1FxRkJxdkNXMQplclZWdHc2dmZZTy9yVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCamJSWkxWUFd0a0pOTUpjamsxSXNGaW1zVnlMa28KcXpBemQva2pneG1wcUFIcGliRExxLytpcDlNRzRNZlV0eklXQ0FaaThESzBNQ0hQVmNHSElTMVdJZ2RCeEgrZwo3cUdtekV1Rkx5TXN1VnZWOFBodHRUM3dVdlZyU3lWZFNKMk5NN3A1UEVBT2FoazA1aFYwTGdLcTNRTnB0bm95CnBHeFYyL09vOHNtMmwrd0s2ek1ObXdtd1FUNXN2RlNSNzQ1bm1uMUgwMndlOHE5MHFTZ1BMNy93dS9GT1VQR3UKeXNObytnWnUzbnZRWVg0UVJ5ZmpDSDVLV2NXSzA0U0g2NzN2SThXb1J4am5Kb3RDelVXWmJDNXNpdE42bldWVAo3OXdObkZYSjVqc0dlY1pYU1VHKzlRempLWm5IYnFVM21yQ2owbE9xQ1RBbkRwT1g0RURQV2tPYQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeGtpWWk5QjFxRHplVnVLQXhxNjQxQWpJbWh6bmIyblQrSElvQ2xMMjMwQ1NJQlN0CmVhem1PejdudGtKTmxxUXA5VFFCcXpGek5nTVdJNlhVb0pIU3NlbmN6OGVobUdVYkV6NGJoRUw0SEJ6RVFoeE0KUXNNbG4xeFAzcnh5aFRWQlF2MlhPRGxHYUVJWjhNSG13dFY2UjFpZE1LSlZCck55NFVOQzkzWUliZnVCOHV3UQpKSUtRQ1piSFhSN1NsTEJsaUlpOXd5RzNtL3ZITEs0WW9FYStDSFJzZXlDRnlQanl4NloyOXI2SXJLSk9ERzRpCkF4YStZRWdLNnFGaCtFdXdUZVpjTHlzaC81N2F4K2kxYmU5UTRiaWhFdTNFRnFkTnZCY1diU05FODdmd0ROUEoKUXVmeFlIbUFpM09wd2gyekVtNWtPM2duaDQxZmcrMGxEWHVpVndJREFRQUJBb0lCQUIrcXAyWW80Q21Dc3hXWQpMZTNOS0txQVRwMUNRWG5ySWxXNjBZYzRrY0c4MjdsdzQvV2JOZGUvWjUwVmdMT3V1eDYwZEJIRm4zdEFTZkJlCmd4TXp4cnp3TnZvZURVSTczM09XeHlrNzBza1dsUWRqNHBBRS80U3dadmNSREk4V25yb1dxdWhwU1VQTVRyMUQKRWxvS1l2RnpCd09sNFVObE5GTWlmVmJ0REZLWUFNRzc4R1RMSVc1Q2pWRmwwUXUxeVRDV0ZjY29oVmdidGJxQwpnOHRHbHdUSTJQbXF6ZHNTam9pZ3E3Y0hnZ2dLV250RHk1bjJRUUJ5aDNXNWZUM2xoNGVyQzVxNncycHJpS2dtCmVEbm5WL2tZU1B5MGl6RU5BZWxaUXNoc0RvSHlCd1I1Z0REamFZaVQrU3BTMXQ1MEwzUzRJWDU5NW96MWlDSGwKWjkwMzIwMENnWUVBM0xKNy82dmk1UEdpc2t6d1RsNlQyTWpSb3MxajEzd3JqenJwSFVCTlpsT2RQOE5JR1drRAorSC9tUXdMbFBadG9meXBnaGNMNnZDZlduV0ljNVE0MnRqRmZWVVJoN3AvUGxlWmpjLzd0b3RybE53Q1BORERyCmt4bU4wOWtPeUdrOEFFMmpMVm44UjIwOFRTbm9ZZWJ0RmJSL0JFQWwxRnd6NDBmVnRQKzdLME1DZ1lFQTVnQkcKNjlOd2VCK3JzYW5CbzM1bmVGcHNnanRuNDgxY1hEeDJGUUExS1g2Rk4rNm1zcGwvdE5sVFlHTytRN3A0L0RQZgp1b01iS20wWEhZV1BLa1V2WHJzYS8wcWJkWFU4cVBadURBcnhjU2wzTnRTVjBVWWlNRXhqTEpqNXlvMkhSaTlTCldKMFlYVlVsOGt6Mk1zMVZJbHBRSVNUQjk0WmlScXZiSUxHSk9WMENnWUVBeXJVNWhXMDRXdmJDYkNpVTlEYVUKYjZLTVFvK0tLK3RHQ3ltZDRoc2t2RjhDYVFXUjNKMERZNlQrTndDYTFFcEE0Y1Jub1pTa1Bsd05HTU44TExzdwpiNG5MdVlLMHZMdVdyR1ZQWmNSNk9vSDUxTm96cmtsY3B1RHF6dkZvVFpXeTRjaHRuNE11WCtDcWFXbWJvd2k3CkxKdDdxc2pNdGsvMTdNVVhPa2RGZ0FjQ2dZRUE0YTVQNk1KMXowaTBQZ1hsL1RqZzZsVS90NkgyMUs0Qy9IWlAKSDFndTBlSlZjWVo0aHpMYS9tZG95bUhVcGJ4cFRuN1Avc0Q2Zk96Q0M3T3J3THhXT011N045akxKYnU5bzhUNgpRbExTaWtrM3N0TnhsZ0VOTnZzZExQdUZ6dHlFYWJleFEwWVNUREpxbzVBazI4QmkwdXh2UjdZN3BWZDFRd2NLCll0QVJaL2tDZ1lCQkRoaE44MHZ4QjJXeWNnM1NvQVRhS2lRUFppRXEwaWpQdEtOTGJmNGp3NVd6c0N5SVBQZVEKd3FHM0pHZFZKNnZUeG9NME5RVktyOW5janNLNzNsckdvZDl1Vit0Z1VpMzZhUUN4WFZ2TitaZkZReXo0NFc4ZgpUdkl3aTdzRUR6ZU1LRUZGbE52NlErWngvZEJLT2VqRE1CM2VpZ05palZDRHFrcnkxanlkQ2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd", "kvstore" or
  # "doublewrite-readkvstore" / "doublewrite-readcrd".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  # - "doublewrite" modes store identities in both the kvstore and CRDs. This is useful
  #   for seamless migrations from the kvstore mode to the crd mode. Consult the
  #   documentation for more information on how to perform the migration.
  identity-allocation-mode: crd

  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # Set the TCP port for the agent health status API. This is not the port used
  # for cilium-health.
  agent-health-port: "9876"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":9963"
  enable-metrics: "true"
  enable-policy-secrets-sync: "true"
  policy-secrets-only-from-secrets-namespace: "true"
  policy-secrets-namespace: "cilium-secrets"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"
  bpf-lb-source-range-all-types: "false"
  bpf-lb-algorithm-annotation: "false"
  bpf-lb-mode-annotation: "false"

  bpf-distributed-lru: "false"
  bpf-events-drop-enabled: "true"
  bpf-events-policy-verdict-enabled: "true"
  bpf-events-trace-enabled: "true"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve

  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"
  tunnel-source-port-range: "0-0"
  service-no-backend-response: "reject"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "false"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-tcx: "true"
  datapath-mode: "veth"
  enable-masquerade-to-route-source: "false"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"
  iptables-random-fully: "false"

  auto-direct-node-routes: "false"
  direct-routing-skip-unreachable: "false"
  enable-local-redirect-policy: "false"
  enable-runtime-device-detection: "true"

  kube-proxy-replacement: "false"
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  enable-health-check-loadbalancer-ip: "false"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-acceleration: "disabled"
  enable-experimental-lb: "false"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  k8s-require-ipv4-pod-cidr: "false"
  k8s-require-ipv6-pod-cidr: "false"
  enable-k8s-networkpolicy: "true"
  enable-endpoint-lockdown-on-policy-overflow: "false"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  health-check-icmp-failure-threshold: "3"
  enable-well-known-identities: "false"
  enable-node-selector-labels: "false"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"

  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  hubble-export-file-max-size-mb: "10"
  hubble-export-file-max-backups: "5"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.244.0.0/16"
  cluster-pool-ipv4-mask-size: "24"

  default-lb-service-ipam: "lbipam"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  # default DNS proxy to transparent mode in non-chaining modes
  dnsproxy-enable-transparent-mode: "true"
  dnsproxy-socket-linger-timeout: "10"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "1000"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-xff-num-trusted-hops-ingress: "0"
  proxy-xff-num-trusted-hops-egress: "0"
  proxy-connect-timeout: "2"
  proxy-initial-fetch-timeout: "30"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"
  proxy-idle-timeout-seconds: "60"
  proxy-max-concurrent-retries: "128"
  http-retry-count: "3"

  external-envoy-proxy: "false"
  envoy-base-id: "0"
  envoy-access-log-buffer-size: "4096"
  envoy-keep-cap-netbindservice: "false"
  max-connected-clusters: "255"
  clustermesh-enable-endpoint-sync: "false"
  clustermesh-enable-mcs-api: "false"

  nat-map-stats-entries: "32"
  nat-map-stats-interval: "30s"
  enable-internal-traffic-policy: "true"
  enable-lb-ipam: "false"
  enable-non-default-deny-policies: "true"
  enable-source-ip-verification: "true"

# Extra config allows adding arbitrary properties to the cilium config.
# By putting it at the end of the ConfigMap, it's also possible to override existing properties.
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local.:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    metrics-listen-address: ":9966"
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n\n        # Liveness probe\n        location /healthz {\n            access_log off;\n            add_header Content-Type text/plain;\n            return 200 'ok';\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumbgpnodeconfigs
  - ciliumbgpadvertisements
  - ciliumbgppeerconfigs
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  - ciliumbgpnodeconfigs/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  resourceNames:
  - cilium-config
  verbs:
   # allow patching of the configmap to set annotations
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumbgppeerconfigs
  - ciliumbgpadvertisements
  - ciliumbgpnodeconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumbgpclusterconfigs/status
  - ciliumbgppeerconfigs/status
  verbs:
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumbgpclusterconfigs.cilium.io
  - ciliumbgppeerconfigs.cilium.io
  - ciliumbgpadvertisements.cilium.io
  - ciliumbgpnodeconfigs.cilium.io
  - ciliumbgpnodeconfigoverrides.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  - ciliumbgppeeringpolicies
  - ciliumbgpclusterconfigs
  - ciliumbgpnodeconfigoverrides
  - ciliumbgppeerconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium

rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium

roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-tlsinterception-secrets
  namespace: "cilium-secrets"  
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-operator/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-operator-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - update
  - patch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-operator-tlsinterception-secrets
  namespace: "cilium-secrets"
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-operator-tlsinterception-secrets
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/metrics-service.yaml
# We use a separate service from hubble-relay which can be exposed externally
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble-relay

spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - name: metrics
    port: 9966
    protocol: TCP
    targetPort: prometheus
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9966"
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium

spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: grpc
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium

spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer

spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        appArmorProfile:
          type: Unconfined
        seccompProfile:
          type: Unconfined
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
          initialDelaySeconds: 5
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
            - name: "require-k8s-connectivity"
              value: "false"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 12
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: GOMEMLIMIT
          valueFrom:
            resourceFieldRef:
              resource: limits.memory
              divisor: '1'
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -E -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -E -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 512Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cilium-netns
          mountPath: /var/run/cilium/netns
          mountPropagation: HostToContainer
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
        
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-dbg
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: WRITE_CNI_CONF_WHEN_READY
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: write-cni-conf-when-ready
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.17.7@sha256:b22440f49c61195171aca585c7a57c6a8867271e43a5abc38f2a2f561436ff86"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To exec into pod network namespaces
      - name: cilium-netns
        hostPath:
          path: /var/run/netns
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host or apply sysctlfix
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
          # note: we configure the volume for the kvstoremesh-specific certificate
          # regardless of whether KVStoreMesh is enabled or not, so that it can be
          # automatically mounted in case KVStoreMesh gets subsequently enabled,
          # without requiring an agent restart.
          - secret:
              name: clustermesh-apiserver-local-cert
              optional: true
              items:
              - key: tls.key
                path: local-etcd-client.key
              - key: tls.crt
                path: local-etcd-client.crt
              - key: ca.crt
                path: local-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9963"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.17.7@sha256:a610be2562d0f5a8945a27df7d5681711263ce92e09947e867fc37fc9ab08788"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        ports:
        - name: prometheus
          containerPort: 9963
          hostPort: 9963
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 128Mi
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium

spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9966"
        prometheus.io/scrape: "true"
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.17.7@sha256:9394312ce65c3c253a8c26a6c292f58736e75c78d1446ecfcd244f1418bebe77"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
            - name: prometheus
              containerPort: 9966
              protocol: TCP
          readinessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 3
          # livenessProbe will kill the pod, we should be very conservative
          # here on failures since killing the pod should be a last resort, and
          # we should provide enough time for relay to retry before killing it.
          livenessProbe:
            grpc:
              port: 4222
            timeoutSeconds: 10
            # Give relay time to establish connections and make a few retries
            # before starting livenessProbes.
            initialDelaySeconds: 10
            # 10 second * 12 failures = 2 minutes of failure.
            # If relay cannot become healthy after 2 minutes, then killing it
            # might resolve whatever issue is occurring.
            #
            # 10 seconds is a reasonable retry period so we can see if it's
            # failing regularly or only sporadically.
            periodSeconds: 10
            failureThreshold: 12
          startupProbe:
            grpc:
              port: 4222
            # Give relay time to get it's certs and establish connections and
            # make a few retries before starting startupProbes.
            initialDelaySeconds: 10
            # 20 * 3 seconds = 1 minute of failure before we consider startup as failed.
            failureThreshold: 20
            # Retry more frequently at startup so that it can be considered started more quickly.
            periodSeconds: 3
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
        
      restartPolicy: Always
      priorityClassName: 
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      priorityClassName: 
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.13.2@sha256:9e37c1296b802830834cc87342a9182ccbb71ffebb711971e849221bd9d59392"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
        readinessProbe:
          httpGet:
            path: /
            port: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.13.2@sha256:a034b7e98e6ea796ed26df8f4e71f83fc16465a19d166eff67a03b822c0bfa15"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
